# Plot the loss values
import numpy as np
from matplotlib import pyplot as plt
import pandas as pd

import numpy as np

loss_values = np.loadtxt("../model/losses.csv", delimiter=",", usecols=0)
print(loss_values)

psnr_values = np.loadtxt("../eval_score/evaluation_scores.csv", usecols=1, skiprows=1, delimiter=",")
print(psnr_values)

ssim_values = np.loadtxt("../eval_score/evaluation_scores.csv", usecols=2, skiprows=1, delimiter=",")
print(ssim_values)

'''psnr_values = [25.3891,
26.7109,
27.0565,
27.3387,
25.9534,
26.8125,
27.7095,
27.7573,
27.2925,
27.1386,
27.8498,
27.9397,
27.8314,
27.9372,
28.0367,
28.0311,
28.006,
27.145,
28.0914,
28.0928,
28.087,
28.0549,
28.1375,
28.1715,
28.0841,
28.2098,
28.0366,
28.2016,
28.1601,
27.9658,
27.5159,
28.2698,
28.1207,
28.2504,
28.238,
28.2148,
25.7472,
28.2792,
28.287,
28.258,
28.246,
28.2498,
28.3169,
28.2726,
28.2978,
28.3174,
28.3797,
28.3671,
28.3796,
27.9166,
28.3374,
28.2401,
28.4014,
28.404,
28.4319,
28.2791,
28.3989,
28.3942,
28.4526,
27.4857,
28.4098,
28.4323,
28.3698,
28.4724,
28.4158,
28.3829,
28.4852,
28.3741,
28.1416,
28.4681,
28.4851,
28.5153,
28.4898,
28.5184,
28.5428,
28.544,
28.5552,
28.54,
28.4971,
28.5651,
28.5425,
28.586,
28.5882,
28.6,
28.6025,
28.5894,
28.6062,
28.5823,
28.6231,
28.5525,
28.6383,
28.634,
28.6228,
28.6204,
28.6098,
28.6628,
28.6692,
28.6712,
28.6718,
28.6757,
28.6741,
28.6653,
28.6816,
28.6835,
28.6827,
28.684,
28.6842,
28.6916,
28.6921,
28.6926,
28.6929,
28.6865,
28.699,
28.6999,
28.6998,
28.7026,
28.7027,
28.7052,
28.7052,
28.6876,
28.7108,
28.7115,
28.7138,
28.711,
28.7111,
28.7115,
28.7213,
28.7216,
28.7211,
28.7234,
28.7247,
28.7214,
28.7271,
28.7287,
28.7262,
28.7303,
28.7307,
28.7321,
28.7301,
28.7261,
28.7269,
28.7355,
28.7322,
28.7349,
28.7398,
28.7371,
28.7356,
28.7227,
28.7399,
28.7395,]
ssim_values = [0.8372,
0.874,
0.8779,
0.8936,
0.8824,
0.89,
0.9001,
0.9007,
0.8994,
0.8968,
0.902,
0.9049,
0.9042,
0.9047,
0.9064,
0.9073,
0.9033,
0.9025,
0.9079,
0.9086,
0.9083,
0.9083,
0.9091,
0.9089,
0.9081,
0.9098,
0.9072,
0.9099,
0.909,
0.9093,
0.9046,
0.9113,
0.9103,
0.9101,
0.911,
0.9107,
0.897,
0.9117,
0.9113,
0.9107,
0.9117,
0.9102,
0.9121,
0.912,
0.912,
0.9101,
0.9131,
0.9134,
0.914,
0.9055,
0.9131,
0.9131,
0.9141,
0.9136,
0.9151,
0.9131,
0.9139,
0.9131,
0.9149,
0.9086,
0.9142,
0.9134,
0.9138,
0.9152,
0.9134,
0.9138,
0.9156,
0.9148,
0.9153,
0.9153,
0.9139,
0.9156,
0.9147,
0.9159,
0.9162,
0.916,
0.9164,
0.9165,
0.9156,
0.9146,
0.9154,
0.9161,
0.9161,
0.9161,
0.9164,
0.9156,
0.9156,
0.9151,
0.9163,
0.9145,
0.9158,
0.9167,
0.9155,
0.9155,
0.9155,
0.9166,
0.9164,
0.9167,
0.9169,
0.9169,
0.9169,
0.9165,
0.9166,
0.9164,
0.9168,
0.9166,
0.9163,
0.9163,
0.9166,
0.9162,
0.9161,
0.9164,
0.917,
0.9168,
0.9165,
0.9168,
0.9165,
0.9171,
0.9174,
0.9167,
0.9174,
0.9173,
0.9171,
0.9173,
0.9162,
0.9171,
0.9172,
0.917,
0.9173,
0.9175,
0.9174,
0.9171,
0.9175,
0.9171,
0.9173,
0.9178,
0.9172,
0.9176,
0.9174,
0.9173,
0.9176,
0.9174,
0.9177,
0.9177,
0.9172,
0.9172,
0.9169,
0.9173,
0.9173,
0.9174,]'''

# Generate x-axis values for loss (10 values per epoch)
num_epochs = len(loss_values) // 10
loss_x = np.arange(0, num_epochs + 1, 1 / 10)
loss_x = loss_x[:len(loss_values)]

# Generate x-axis values for PSNR (3 values per epoch)
num_epochs = len(psnr_values) // 3
psnr_x = np.arange(0, num_epochs + 1, 1 / 3)
psnr_x = psnr_x[:len(psnr_values)]

# Generate x-axis values for SSIM (3 values per epoch)
num_epochs = len(ssim_values) // 3
ssim_x = np.arange(0, num_epochs + 1, 1 / 3)
ssim_x = ssim_x[:len(ssim_values)]

# Plot the loss values
plt.figure(figsize=(8, 6))
plt.plot(loss_x, loss_values, label='Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.title('Training Loss')
plt.legend()
plt.savefig('training_loss.png')
plt.show()

# Plot the PSNR values
plt.figure(figsize=(8, 6))
plt.plot(psnr_x, psnr_values, label='PSNR')
plt.xlabel('Epoch')
plt.ylabel('PSNR')
plt.title('Validation PSNR')
plt.legend()
plt.savefig('validation_psnr.png')
plt.show()

# Plot the SSIM values
plt.figure(figsize=(8, 6))
plt.plot(ssim_x, ssim_values, label='SSIM')
plt.xlabel('Epoch')
plt.ylabel('SSIM')
plt.title('Validation SSIM')
plt.legend()
plt.savefig('validation_ssim.png')
plt.show()
